---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: collect-github-params
  labels:
    app.kubernetes.io/version: "1.3.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task that collects GitHub configuration options to prepare for release
  params:
    - name: snapshotPath
      type: string
      description: Path to the JSON string of the mapped Snapshot spec in the data workspace
  workspaces:
    - name: data
      description: The workspace where the snapshot spec json file resides
  results:
    - name: repository
      type: string
      description: "The github repository where the release should be created"
    - name: release_version
      type: string
      description: "The version string of the new release"
    - name: username
      type: string
      description: "The username of the repo where release will be created"
    - name: commit_sha
      type: string
      description: "The commit SHA that triggered the build in Konflux"
  steps:
    - name: collect-github-params
      image:
        quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
        #!/usr/bin/env bash
        set -x

        SNAPSHOT_SPEC_FILE="$(workspaces.data.path)/$(params.snapshotPath)"
        if [ ! -f "${SNAPSHOT_SPEC_FILE}" ] ; then
            echo "No valid snapshot file was provided."
            exit 1
        fi

        RELEASE_VERSION=v0.1
        echo -n "$RELEASE_VERSION" > "$(results.release_version.path)"

        COMMIT_SHA=$(jq -jr '.components[0].source.git.revision' "${SNAPSHOT_SPEC_FILE}")
        GITHUB_URL=$(jq -jr '.components[0].source.git.url' "${SNAPSHOT_SPEC_FILE}")
        GH_USERNAME=$(echo "$GITHUB_URL" | awk -F'/' '{print $4}')
        GH_REPONAME=$(echo "$GITHUB_URL" | awk -F'/' '{print $5}')

        echo -n "$GH_USERNAME" > "$(results.username.path)"

        echo -n "$GH_REPONAME" > "$(results.repository.path)"

        echo -n "$COMMIT_SHA" > "$(results.commit_sha.path)"
